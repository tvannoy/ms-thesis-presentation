[
 {
  "sid":"BC:45",
  "className":"Simulink.Annotation",
  "icon":"BC1",
  "name":"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"> <html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\"> p, li { white-space: pre-wrap; } </style></head><body style=\" font-family:'Helvetica'; font-size:10px; font-weight:400; font-style:normal;\"> <p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px; font-weight:600;\">Avalon Streaming Sink Signals</span></p> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">Note:  We are assuming a specific system clock frequency that these signals are being clock in at.</span></p> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">The interface needs to be regenerated if this system clock frequency changes.  Change system clock frequency in InitFcn callback in Model Explorer.</span></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12px;\"><br /></p> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">-- Avalon streaming slave interface (sink)</span></p> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">        AD1939_DAC_data         : in     std_logic_vector(31 downto 0);     -- W=32; F=28; Signed 2's Complement</span></p> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">        AD1939_DAC_channel   : in     std_logic_vector(1 downto 0);       -- Left &lt;-&gt; channel 0;  Right &lt;-&gt; channel 1  (other two channels are ignored)</span></p> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">        AD1939_DAC_valid        : in     std_logic;                                       -- asserted when data is valid </span></p> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">        AD1939_DAC_error        : in     std_logic_vector(1 downto 0)       -- error channel is ignored, assumed to be error free at this point</span></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">For more information on the data-channel-valid protocol, s</span><span style=\" font-size:12px;\">ee chapter 5 in Intel's Avalon Interfaced Specification (p. 40) at </span><a href=\"https://www.intel.com/content/dam/www/programmable/us/en/pdfs/literature/manual/mnl_avalon_spec.pdf\"><span style=\" font-size:10px; text-decoration: underline; color:#0000ff;\">https://www.intel.com/content/dam/www/programmable/us/en/pdfs/literature/manual/mnl_avalon_spec.pdf</span></a></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>",
  "label":"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"> <html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\"> p, li { white-space: pre-wrap; } </style></head><body style=\" font-family:'Helvetica'; font-size:10px; font-weight:400; font-style:normal;\"> <p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px; font-weight:600;\">Avalon Streaming Sink Signals</span></p> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">Note:  We are assuming a specific system clock frequency that these signals are being clock in at.</span></p> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">The interface needs to be regenerated if this system clock frequency changes.  Change system clock frequency in InitFcn callback in Model Explorer.</span></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12px;\"><br /></p> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">-- Avalon streaming slave interface (sink)</span></p> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">        AD1939_DAC_data         : in     std_logic_vector(31 downto 0);     -- W=32; F=28; Signed 2's Complement</span></p> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">        AD1939_DAC_channel   : in     std_logic_vector(1 downto 0);       -- Left &lt;-&gt; channel 0;  Right &lt;-&gt; channel 1  (other two channels are ignored)</span></p> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">        AD1939_DAC_valid        : in     std_logic;                                       -- asserted when data is valid </span></p> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">        AD1939_DAC_error        : in     std_logic_vector(1 downto 0)       -- error channel is ignored, assumed to be error free at this point</span></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p> <p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">For more information on the data-channel-valid protocol, s</span><span style=\" font-size:12px;\">ee chapter 5 in Intel's Avalon Interfaced Specification (p. 40) at </span><a href=\"https://www.intel.com/content/dam/www/programmable/us/en/pdfs/literature/manual/mnl_avalon_spec.pdf\"><span style=\" font-size:10px; text-decoration: underline; color:#0000ff;\">https://www.intel.com/content/dam/www/programmable/us/en/pdfs/literature/manual/mnl_avalon_spec.pdf</span></a></p> <p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "Text",
    "DropShadow",
    "Interpreter",
    "FontName",
    "FontWeight",
    "FontSize",
    "FontAngle",
    "ForegroundColor",
    "BackgroundColor",
    "HorizontalAlignment",
    "UseDisplayTextAsClickCallback",
    "ClickFcn"
   ],
   "values":[
    "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style></head><body style=\" font-family:'Helvetica'; font-size:10px; font-weight:400; font-style:normal;\">\n<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px; font-weight:600;\">Avalon Streaming Sink Signals</span></p>\n<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">Note:  We are assuming a specific system clock frequency that these signals are being clock in at.</span></p>\n<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">The interface needs to be regenerated if this system clock frequency changes.  Change system clock frequency in InitFcn callback in Model Explorer.</span></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12px;\"><br /></p>\n<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">-- Avalon streaming slave interface (sink)</span></p>\n<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">        AD1939_DAC_data         : in     std_logic_vector(31 downto 0);     -- W=32; F=28; Signed 2's Complement</span></p>\n<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">        AD1939_DAC_channel   : in     std_logic_vector(1 downto 0);       -- Left &lt;-&gt; channel 0;  Right &lt;-&gt; channel 1  (other two channels are ignored)</span></p>\n<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">        AD1939_DAC_valid        : in     std_logic;                                       -- asserted when data is valid </span></p>\n<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">        AD1939_DAC_error        : in     std_logic_vector(1 downto 0)       -- error channel is ignored, assumed to be error free at this point</span></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12px;\">For more information on the data-channel-valid protocol, s</span><span style=\" font-size:12px;\">ee chapter 5 in Intel's Avalon Interfaced Specification (p. 40) at </span><a href=\"https://www.intel.com/content/dam/www/programmable/us/en/pdfs/literature/manual/mnl_avalon_spec.pdf\"><span style=\" font-size:10px; text-decoration: underline; color:#0000ff;\">https://www.intel.com/content/dam/www/programmable/us/en/pdfs/literature/manual/mnl_avalon_spec.pdf</span></a></p>\n<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>",
    "off",
    "rich",
    "auto",
    "auto",
    -1,
    "auto",
    "black",
    "[0.666667, 1.000000, 1.000000]",
    "left",
    "off",
    ""
   ],
   "tabs":[
   ],
   "tabs_idx":[
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"BC:1",
  "className":"Simulink.FromWorkspace",
  "icon":"BC3",
  "name":"Avalon Source Data ",
  "label":"Avalon Source Data ",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "VariableName",
    "OutDataTypeStr",
    "SampleTime",
    "Interpolate",
    "ZeroCross",
    "OutputAfterFinalValue"
   ],
   "values":[
    "mp.Avalon_Source_Data",
    "double",
    "mp.Ts_system",
    "on",
    "on",
    "Extrapolation"
   ],
   "tabs":[
    "Parameter Attributes"
   ],
   "tabs_idx":0
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"FromWorkspace",
   "masktype":""
  }
 },
 {
  "sid":"BC:4",
  "className":"Simulink.FromWorkspace",
  "icon":"BC3",
  "name":"Avalon Source Channel",
  "label":"Avalon Source Channel",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "VariableName",
    "OutDataTypeStr",
    "SampleTime",
    "Interpolate",
    "ZeroCross",
    "OutputAfterFinalValue"
   ],
   "values":[
    "mp.Avalon_Source_Channel",
    "double",
    "mp.Ts_system",
    "on",
    "on",
    "Extrapolation"
   ],
   "tabs":[
    "Parameter Attributes"
   ],
   "tabs_idx":0
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"FromWorkspace",
   "masktype":""
  }
 },
 {
  "sid":"BC:7",
  "className":"Simulink.DataTypeConversion",
  "icon":"BC3",
  "name":"Data Type Conversion",
  "label":"Data Type Conversion",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "OutMin",
    "OutMax",
    "OutDataTypeStr",
    "LockScale",
    "ConvertRealWorld",
    "RndMeth",
    "SaturateOnIntegerOverflow",
    "SampleTime"
   ],
   "values":[
    "[]",
    "[]",
    "fixdt(1,mp.W_bits,mp.F_bits)",
    "off",
    "Real World Value (RWV)",
    "Floor",
    "off",
    "-1"
   ],
   "tabs":[
    "Parameter Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"DataTypeConversion",
   "masktype":""
  }
 },
 {
  "sid":"BC:8",
  "className":"Simulink.DataTypeConversion",
  "icon":"BC3",
  "name":"Data Type Conversion1",
  "label":"Data Type Conversion1",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "OutMin",
    "OutMax",
    "OutDataTypeStr",
    "LockScale",
    "ConvertRealWorld",
    "RndMeth",
    "SaturateOnIntegerOverflow",
    "SampleTime"
   ],
   "values":[
    "[]",
    "[]",
    "fixdt(0,2,0)",
    "off",
    "Real World Value (RWV)",
    "Floor",
    "off",
    "-1"
   ],
   "tabs":[
    "Parameter Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"DataTypeConversion",
   "masktype":""
  }
 },
 {
  "sid":"BC:46",
  "className":"Simulink.FromWorkspace",
  "icon":"BC3",
  "name":"Avalon Source Valid",
  "label":"Avalon Source Valid",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "VariableName",
    "OutDataTypeStr",
    "SampleTime",
    "Interpolate",
    "ZeroCross",
    "OutputAfterFinalValue"
   ],
   "values":[
    "mp.Avalon_Source_Valid",
    "double",
    "mp.Ts_system",
    "on",
    "on",
    "Extrapolation"
   ],
   "tabs":[
    "Parameter Attributes"
   ],
   "tabs_idx":0
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"FromWorkspace",
   "masktype":""
  }
 },
 {
  "sid":"BC:47",
  "className":"Simulink.DataTypeConversion",
  "icon":"BC3",
  "name":"Data Type Conversion2",
  "label":"Data Type Conversion2",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "OutMin",
    "OutMax",
    "OutDataTypeStr",
    "LockScale",
    "ConvertRealWorld",
    "RndMeth",
    "SaturateOnIntegerOverflow",
    "SampleTime"
   ],
   "values":[
    "[]",
    "[]",
    "boolean",
    "off",
    "Real World Value (RWV)",
    "Floor",
    "off",
    "-1"
   ],
   "tabs":[
    "Parameter Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"DataTypeConversion",
   "masktype":""
  }
 },
 {
  "sid":"BC:48",
  "className":"Simulink.FromWorkspace",
  "icon":"BC3",
  "name":"Avalon Source Error",
  "label":"Avalon Source Error",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "VariableName",
    "OutDataTypeStr",
    "SampleTime",
    "Interpolate",
    "ZeroCross",
    "OutputAfterFinalValue"
   ],
   "values":[
    "mp.Avalon_Source_Error",
    "double",
    "mp.Ts_system",
    "on",
    "on",
    "Extrapolation"
   ],
   "tabs":[
    "Parameter Attributes"
   ],
   "tabs_idx":0
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"FromWorkspace",
   "masktype":""
  }
 },
 {
  "sid":"BC:49",
  "className":"Simulink.DataTypeConversion",
  "icon":"BC3",
  "name":"Data Type Conversion3",
  "label":"Data Type Conversion3",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "OutMin",
    "OutMax",
    "OutDataTypeStr",
    "LockScale",
    "ConvertRealWorld",
    "RndMeth",
    "SaturateOnIntegerOverflow",
    "SampleTime"
   ],
   "values":[
    "[]",
    "[]",
    "fixdt(0,2,0)",
    "off",
    "Real World Value (RWV)",
    "Floor",
    "off",
    "-1"
   ],
   "tabs":[
    "Parameter Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"DataTypeConversion",
   "masktype":""
  }
 },
 {
  "sid":"BC:51",
  "className":"Simulink.Outport",
  "icon":"BC3",
  "name":"data",
  "label":"data",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "Port",
    "IconDisplay",
    "OutMin",
    "OutMax",
    "OutDataTypeStr",
    "LockScale",
    "Unit",
    "PortDimensions",
    "VarSizeSig",
    "SampleTime",
    "SignalType",
    "BusOutputAsStruct",
    "EnsureOutportIsVirtual",
    "InitialOutput",
    "MustResolveToSignalObject",
    "OutputWhenDisabled",
    "OutputWhenUnConnected",
    "OutputWhenUnconnectedValue",
    "SignalName",
    "SignalObject",
    "SourceOfInitialOutputValue",
    "StorageClass",
    "VectorParamsAs1DForOutWhenUnconnected"
   ],
   "values":[
    "2",
    "Port number",
    "[]",
    "[]",
    "Inherit: auto",
    "off",
    "inherit",
    "-1",
    "Inherit",
    "-1",
    "auto",
    "off",
    "off",
    "[]",
    "off",
    "held",
    "off",
    "0",
    "",
    [
    ],
    "Dialog",
    "Auto",
    "off"
   ],
   "tabs":[
    "Main",
    "Signal Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    2,
    11
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"Outport",
   "masktype":""
  }
 },
 {
  "sid":"BC:52",
  "className":"Simulink.Outport",
  "icon":"BC3",
  "name":"valid",
  "label":"valid",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "Port",
    "IconDisplay",
    "OutMin",
    "OutMax",
    "OutDataTypeStr",
    "LockScale",
    "Unit",
    "PortDimensions",
    "VarSizeSig",
    "SampleTime",
    "SignalType",
    "BusOutputAsStruct",
    "EnsureOutportIsVirtual",
    "InitialOutput",
    "MustResolveToSignalObject",
    "OutputWhenDisabled",
    "OutputWhenUnConnected",
    "OutputWhenUnconnectedValue",
    "SignalName",
    "SignalObject",
    "SourceOfInitialOutputValue",
    "StorageClass",
    "VectorParamsAs1DForOutWhenUnconnected"
   ],
   "values":[
    "1",
    "Port number",
    "[]",
    "[]",
    "Inherit: auto",
    "off",
    "inherit",
    "-1",
    "Inherit",
    "-1",
    "auto",
    "off",
    "off",
    "[]",
    "off",
    "held",
    "off",
    "0",
    "",
    [
    ],
    "Dialog",
    "Auto",
    "off"
   ],
   "tabs":[
    "Main",
    "Signal Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    2,
    11
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"Outport",
   "masktype":""
  }
 },
 {
  "sid":"BC:53",
  "className":"Simulink.Outport",
  "icon":"BC3",
  "name":"channel",
  "label":"channel",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "Port",
    "IconDisplay",
    "OutMin",
    "OutMax",
    "OutDataTypeStr",
    "LockScale",
    "Unit",
    "PortDimensions",
    "VarSizeSig",
    "SampleTime",
    "SignalType",
    "BusOutputAsStruct",
    "EnsureOutportIsVirtual",
    "InitialOutput",
    "MustResolveToSignalObject",
    "OutputWhenDisabled",
    "OutputWhenUnConnected",
    "OutputWhenUnconnectedValue",
    "SignalName",
    "SignalObject",
    "SourceOfInitialOutputValue",
    "StorageClass",
    "VectorParamsAs1DForOutWhenUnconnected"
   ],
   "values":[
    "3",
    "Port number",
    "[]",
    "[]",
    "Inherit: auto",
    "off",
    "inherit",
    "-1",
    "Inherit",
    "-1",
    "auto",
    "off",
    "off",
    "[]",
    "off",
    "held",
    "off",
    "0",
    "",
    [
    ],
    "Dialog",
    "Auto",
    "off"
   ],
   "tabs":[
    "Main",
    "Signal Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    2,
    11
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"Outport",
   "masktype":""
  }
 },
 {
  "sid":"BC:54",
  "className":"Simulink.Outport",
  "icon":"BC3",
  "name":"error",
  "label":"error",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "Port",
    "IconDisplay",
    "OutMin",
    "OutMax",
    "OutDataTypeStr",
    "LockScale",
    "Unit",
    "PortDimensions",
    "VarSizeSig",
    "SampleTime",
    "SignalType",
    "BusOutputAsStruct",
    "EnsureOutportIsVirtual",
    "InitialOutput",
    "MustResolveToSignalObject",
    "OutputWhenDisabled",
    "OutputWhenUnConnected",
    "OutputWhenUnconnectedValue",
    "SignalName",
    "SignalObject",
    "SourceOfInitialOutputValue",
    "StorageClass",
    "VectorParamsAs1DForOutWhenUnconnected"
   ],
   "values":[
    "4",
    "Port number",
    "[]",
    "[]",
    "Inherit: auto",
    "off",
    "inherit",
    "-1",
    "Inherit",
    "-1",
    "auto",
    "off",
    "off",
    "[]",
    "off",
    "held",
    "off",
    "0",
    "",
    [
    ],
    "Dialog",
    "Auto",
    "off"
   ],
   "tabs":[
    "Main",
    "Signal Attributes",
    "-Other"
   ],
   "tabs_idx":[
    0,
    2,
    11
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":{
   "blocktype":"Outport",
   "masktype":""
  }
 },
 {
  "sid":"BC:1#out:1",
  "className":"Simulink.Line",
  "icon":"BC4",
  "name":"",
  "label":"",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "off",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"BC:4#out:1",
  "className":"Simulink.Line",
  "icon":"BC4",
  "name":"",
  "label":"",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "off",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"BC:46#out:1",
  "className":"Simulink.Line",
  "icon":"BC4",
  "name":"",
  "label":"",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "off",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"BC:48#out:1",
  "className":"Simulink.Line",
  "icon":"BC4",
  "name":"",
  "label":"",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "off",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"BC:7#out:1",
  "className":"Simulink.Line",
  "icon":"BC4",
  "name":"",
  "label":"",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "off",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"BC:47#out:1",
  "className":"Simulink.Line",
  "icon":"BC4",
  "name":"",
  "label":"",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "off",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"BC:8#out:1",
  "className":"Simulink.Line",
  "icon":"BC4",
  "name":"",
  "label":"",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "off",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 },
 {
  "sid":"BC:49#out:1",
  "className":"Simulink.Line",
  "icon":"BC4",
  "name":"",
  "label":"",
  "parent":"BC:50",
  "inspector":{
   "params":[
    "SignalNameFromLabel",
    "MustResolveToSignal",
    "ShowPropagatedSignal",
    "DataLogging",
    "TestPoint",
    "SignalObjectPackage",
    "StorageClass",
    "Description",
    "documentLink"
   ],
   "values":[
    "",
    "off",
    "off",
    "off",
    "off",
    "Simulink",
    "Auto",
    "",
    ""
   ],
   "tabs":[
    "Parameter Attributes",
    "Logging and Accessibility",
    "Code Generation",
    "Documentation"
   ],
   "tabs_idx":[
    0,
    3,
    5,
    7
   ]
  },
  "viewer":{
   "jshandler":"webview/handlers/ElementHandler"
  },
  "obj_viewer":[
  ],
  "finder":[
  ]
 }
]